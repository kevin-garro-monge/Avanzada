@model webHibiscus.AspNetUser

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>Editando a @Model.nombre @Model.apellido1 @Model.apellido2</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    @Html.HiddenFor(model => model.EmailConfirmed)
    @Html.ValidationMessageFor(model => model.EmailConfirmed, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.SecurityStamp, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.SecurityStamp, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.PhoneNumberConfirmed)
    @Html.ValidationMessageFor(model => model.PhoneNumberConfirmed, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.TwoFactorEnabled)
    @Html.ValidationMessageFor(model => model.TwoFactorEnabled, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.LockoutEndDateUtc, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.LockoutEndDateUtc, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.LockoutEnabled)
    @Html.ValidationMessageFor(model => model.LockoutEnabled, "", new { @class = "text-danger" })









<div class="form-group">














    <div class="form-group">
       <h4> @Html.LabelFor(model => model.Email,"Correo Electronico", htmlAttributes: new { @class = "control-label col-md-2" })</h4>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
    <h4>    @Html.LabelFor(model => model.AccessFailedCount,"Accesos Erroneos", htmlAttributes: new { @class = "control-label col-md-2" })</h4>
        <div class="col-md-10">
            @Html.EditorFor(model => model.AccessFailedCount, new { htmlAttributes = new { @class = "form-control", ReadOnly="true"  } })
            @Html.ValidationMessageFor(model => model.AccessFailedCount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
      <h4>  @Html.LabelFor(model => model.UserName, "Nombre Usuario",htmlAttributes: new { @class = "control-label col-md-2" })</h4>
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
      <h4>  @Html.LabelFor(model => model.nombre,"Nombre", htmlAttributes: new { @class = "control-label col-md-2" })</h4>    
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
     <h4>   @Html.LabelFor(model => model.apellido1, "Primer Apellido",htmlAttributes: new { @class = "control-label col-md-2" })</h4>
        <div class="col-md-10">
            @Html.EditorFor(model => model.apellido1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.apellido1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
       <h4> @Html.LabelFor(model => model.apellido2,"Segundo Apellido" ,htmlAttributes: new { @class = "control-label col-md-2" })</h4>
        <div class="col-md-10">
            @Html.EditorFor(model => model.apellido2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.apellido2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
    <h4>    @Html.LabelFor(model => model.cedula_Usuario,"Cedula" ,htmlAttributes: new { @class = "control-label col-md-2" })</h4>
        <div class="col-md-10">
            @Html.EditorFor(model => model.cedula_Usuario, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cedula_Usuario, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
       <h4> @Html.LabelFor(model => model.telefono,"Telefono" ,htmlAttributes: new { @class = "control-label col-md-2" })</h4>
        <div class="col-md-10">
            @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
      <h4>  @Html.LabelFor(model => model.idGenero, "Genero", htmlAttributes: new { @class = "control-label col-md-2" })</h4>

        <div class="col-md-10">
            @Html.DropDownList("idGenero", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idGenero, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-success" />
        </div>
    </div>
</div>
</div>
}

<div>
    <a class="btn btn-info" href="@Url.Action("Index", "AspNetUsers")" class="btn btn-default">Volver atras</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
